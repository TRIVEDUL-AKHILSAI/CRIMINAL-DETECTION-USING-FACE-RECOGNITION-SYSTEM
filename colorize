def deblur():
    data = []
    if request.method == "POST":
        file = request.files["file"]
        file_name = os.path.join('C:/Users/Naresh annapureddy/Desktop/flaskapp/flask_app/static/',
                                 secure_filename(file.filename))
        file.save(file_name)
        print(secure_filename(file.filename))
        Before = secure_filename(file.filename)
        with imgw(filename=file_name) as img:
            img.adaptive_sharpen(radius=10, sigma=12)
            img.enhance()
            img.unsharp_mask(radius=10, sigma=12, amount=2, threshold=0)
            img.save(filename="C:/Users/Naresh annapureddy/Desktop/flaskapp/flask_app/static/suspect.jpeg")
            After = "suspect.jpeg"
            data.append(Before)
            data.append(After)
            data.append('1')
            print(data)
    return render_template("forms.html", data=data)


@app.route('/colorize', methods=["GET", "POST"])
def colorize():
    data = []
    if request.method == "POST":
        net = cv2.dnn.readNetFromCaffe('./model/colorization_deploy_v2.prototxt',
                                       './model/colorization_release_v2.caffemodel')
        pts = np.load('./model/pts_in_hull.npy')
        class8 = net.getLayerId("class8_ab")
        conv8 = net.getLayerId("conv8_313_rh")
        pts = pts.transpose().reshape(2, 313, 1, 1)
        net.getLayer(class8).blobs = [pts.astype("float32")]
        net.getLayer(conv8).blobs = [np.full([1, 313], 2.606, dtype='float32')]
        file = request.files["file"]
        file_name = os.path.join('C:/Users/Naresh annapureddy/Desktop/flaskapp/flask_app/static/',
                                 secure_filename(file.filename))
        file.save(file_name)
        image = cv2.imread(file_name)
        scaled = image.astype("float32") / 255.0
        lab = cv2.cvtColor(scaled, cv2.COLOR_BGR2LAB)
        resized = cv2.resize(lab, (224, 224))
        L = cv2.split(resized)[0]
        L -= 50
        net.setInput(cv2.dnn.blobFromImage(L))
        ab = net.forward()[0, :, :, :].transpose((1, 2, 0))
        ab = cv2.resize(ab, (image.shape[1], image.shape[0]))
        L = cv2.split(lab)[0]
        colorized = np.concatenate((L[:, :, np.newaxis], ab), axis=2)
        colorized = cv2.cvtColor(colorized, cv2.COLOR_LAB2BGR)
        colorized = np.clip(colorized, 0, 1)
        colorized = (255 * colorized).astype("uint8")

        cv2.imwrite('C:/Users/Naresh annapureddy/Desktop/flaskapp/flask_app/static/color.png', colorized)
        data.append(secure_filename(file.filename))
        data.append("color.png")
        data.append('2')
    return render_template("forms.html", data=data)
